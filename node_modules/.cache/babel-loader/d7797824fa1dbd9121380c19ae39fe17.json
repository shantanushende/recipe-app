{"ast":null,"code":"var _jsxFileName = \"/Users/shantanushende/Desktop/Recipie_app/recipe-app-1-hour-challenge/src/recipe/EditRecipe.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport { firestore } from \"../firebase\";\n\nconst EditRecipe = props => {\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const user = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    const getRecipe = async () => {\n      const recipeDoc = await firestore.collection(\"users\").doc(user.uid).collection(\"recipes\").doc(props.match.params.id).get();\n      const recipeData = recipeDoc.data();\n      setName(recipeData.name);\n      setIngredients(recipeData.ingredients.toString());\n      setDescription(recipeData.description);\n    };\n\n    getRecipe();\n  }, [user, props.match.params.id]);\n\n  const saveRecipe = async e => {\n    e.preventDefault();\n    const ingredientsArray = ingredients.split(\",\");\n    await firestore.collection(\"users\").doc(user.uid).collection(\"recipes\").doc(props.match.params.id).set({\n      name,\n      ingredients: ingredientsArray,\n      description\n    });\n    history.push(`/recipe/${props.match.params.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Edit recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingredients separated by comma\",\n    value: ingredients,\n    onChange: e => setIngredients(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Save recipe\")));\n};\n\nexport default EditRecipe;","map":{"version":3,"sources":["/Users/shantanushende/Desktop/Recipie_app/recipe-app-1-hour-challenge/src/recipe/EditRecipe.js"],"names":["React","useContext","useEffect","useState","useHistory","UserContext","firestore","EditRecipe","props","name","setName","ingredients","setIngredients","description","setDescription","user","history","getRecipe","recipeDoc","collection","doc","uid","match","params","id","get","recipeData","data","toString","saveRecipe","e","preventDefault","ingredientsArray","split","set","push","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMY,IAAI,GAAGd,UAAU,CAACI,WAAD,CAAvB;AAEA,QAAMW,OAAO,GAAGZ,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMZ,SAAS,CAC9Ba,UADqB,CACV,OADU,EAErBC,GAFqB,CAEjBL,IAAI,CAACM,GAFY,EAGrBF,UAHqB,CAGV,SAHU,EAIrBC,GAJqB,CAIjBZ,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,EAJF,EAKrBC,GALqB,EAAxB;AAMA,YAAMC,UAAU,GAAGR,SAAS,CAACS,IAAV,EAAnB;AACAjB,MAAAA,OAAO,CAACgB,UAAU,CAACjB,IAAZ,CAAP;AACAG,MAAAA,cAAc,CAACc,UAAU,CAACf,WAAX,CAAuBiB,QAAvB,EAAD,CAAd;AACAd,MAAAA,cAAc,CAACY,UAAU,CAACb,WAAZ,CAAd;AACD,KAXD;;AAYAI,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACF,IAAD,EAAOP,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,EAA1B,CAdM,CAAT;;AAgBA,QAAMK,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,gBAAgB,GAAGrB,WAAW,CAACsB,KAAZ,CAAkB,GAAlB,CAAzB;AAEA,UAAM3B,SAAS,CACZa,UADG,CACQ,OADR,EAEHC,GAFG,CAECL,IAAI,CAACM,GAFN,EAGHF,UAHG,CAGQ,SAHR,EAIHC,GAJG,CAICZ,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,EAJpB,EAKHU,GALG,CAKC;AACHzB,MAAAA,IADG;AAEHE,MAAAA,WAAW,EAAEqB,gBAFV;AAGHnB,MAAAA;AAHG,KALD,CAAN;AAWAG,IAAAA,OAAO,CAACmB,IAAR,CAAc,WAAU3B,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,EAAG,EAA9C;AACD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,KAAK,EAAEf,IAHT;AAIE,IAAA,QAAQ,EAAGqB,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACM,MAAF,CAASC,KAAV,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gCAFd;AAGE,IAAA,KAAK,EAAE1B,WAHT;AAIE,IAAA,QAAQ,EAAGmB,CAAD,IAAOlB,cAAc,CAACkB,CAAC,CAACM,MAAF,CAASC,KAAV,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE;AACE,IAAA,WAAW,EAAC,aADd;AAEE,IAAA,KAAK,EAAExB,WAFT;AAGE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,cAAc,CAACgB,CAAC,CAACM,MAAF,CAASC,KAAV,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAkBE;AAAQ,IAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBF,CAFF,CADF;AAyBD,CArED;;AAuEA,eAAetB,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport { firestore } from \"../firebase\";\n\nconst EditRecipe = (props) => {\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const user = useContext(UserContext);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      const recipeDoc = await firestore\n        .collection(\"users\")\n        .doc(user.uid)\n        .collection(\"recipes\")\n        .doc(props.match.params.id)\n        .get();\n      const recipeData = recipeDoc.data();\n      setName(recipeData.name);\n      setIngredients(recipeData.ingredients.toString());\n      setDescription(recipeData.description);\n    };\n    getRecipe();\n  }, [user, props.match.params.id]);\n\n  const saveRecipe = async (e) => {\n    e.preventDefault();\n\n    const ingredientsArray = ingredients.split(\",\");\n\n    await firestore\n      .collection(\"users\")\n      .doc(user.uid)\n      .collection(\"recipes\")\n      .doc(props.match.params.id)\n      .set({\n        name,\n        ingredients: ingredientsArray,\n        description,\n      });\n\n    history.push(`/recipe/${props.match.params.id}`);\n  };\n\n  return (\n    <div className=\"edit-recipe\">\n      <h1>Edit recipe</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Ingredients separated by comma\"\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button onClick={saveRecipe}>Save recipe</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditRecipe;\n"]},"metadata":{},"sourceType":"module"}